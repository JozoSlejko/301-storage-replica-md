{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "namePrefix": {
      "type": "string",
      "minLength": 3,
      "maxLength": 8,
      "metadata": {
        "description": "Naming prefix for each new resource created. 3-char min, 8-char max, lowercase alphanumeric"
      }
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "Size of the Storage Replica VM to be created"
      },
      "defaultValue": "Standard_DS1_v2"
    },
    "enableAcceleratedNetworking": {
      "type": "bool",
      "metadata": {
        "description": "Enable (true) or Disable (false) Accelerated Networking - if enabling, make sure you are selecting appropriate VM Size and Region"
      }
    },
    "vmDiskSize": {
      "type": "int",
      "minValue": 128,
      "maxValue": 1023,
      "metadata": {
        "description": "Size of each data disk in GB on each S2D VM (Min=128, Max=1023)"
      },
      "defaultValue": 1023
    },
    "vmDiskCount": {
      "type": "int",
      "minValue": 2,
      "maxValue": 32,
      "metadata": {
        "description": "Number of data disks on each S2D VM (Min=2, Max=32). Ensure that the VM size you've selected will support this number of data disks."
      },
      "defaultValue": 2
    },
    "existingDomainName": {
      "type": "string",
      "metadata": {
        "description": "DNS domain name for existing Active Directory domain"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Name of the Administrator of the existing Active Directory Domain"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "minLength": 12,
      "metadata": {
        "description": "Password for the Administrator account of the existing Active Directory Domain"
      }
    },
    "existingVirtualNetworkRGName": {
      "type": "string",
      "metadata": {
        "description": "Resource Group Name for the existing VNET."
      }
    },
    "existingVirtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing VNET."
      }
    },
    "existingSubnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing subnet in the existing VNET to which the S2D VMs should be deployed"
      }
    },
    "sourceComputerName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Storage Replica source computer."
      }
    },
    "logVolumeLetter": {
      "type": "string",
      "metadata": {
        "description": "Log volume used by Storage Replica on the source computer. Volume must be formatted as GPT and must be of identical size on the source and destination."
      }
    },
    "logVolumeSize": {
      "type": "int",
      "metadata": {
        "description": "Size of source log volume in GB. Volume must be at least 9GB and of identical size on the source and destination computer."
      }
    },
    "logVolumeAllocationUnitSize": {
      "type": "int",
      "metadata": {
        "description": "All log disks must have the same sector sizes."
      }
    },
    "dataVolumeLetter": {
      "type": "string",
      "metadata": {
        "description": "Data volume on the source computer protected by Storage Replica. Volume must be formatted as GPT."
      }
    },
    "dataVolumeSize": {
      "type": "int",
      "metadata": {
        "description": "Size of source data volume in GB. Volume must be of identical size on the source and destination computer."
      }
    },
    "dataVolumeAllocationUnitSize": {
      "type": "int",
      "metadata": {
        "description": "All log disks must have the same sector sizes."
      }
    },
    "replicationMode": {
      "type": "string",
      "defaultValue": "asynchronous",
      "allowedValues": [
        "asynchronous",
        "synchronous"
      ],
      "metadata": {
        "description": "Storage Replica replication mode."
      }
    },
    "asyncRPO": {
      "type": "int",
      "minValue": 30,
      "metadata": {
        "description": "Value in seconds. Must be at least 30 seconds."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "Location of resources that the script is dependent on such as linked templates and DSC modules"
      },
      "defaultValue": "https://raw.githubusercontent.com/albertwo1978/301-storage-replica-md/master"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      },
      "defaultValue": ""
    }
  },
  "variables": {
    "subnetRef": "[resourceId(parameters('existingVirtualNetworkRGName'),'Microsoft.Network/virtualNetworks/subnets',parameters('existingVirtualNetworkName'),parameters('existingSubnetName'))]",
    "deployStorageReplicaTemplateURL": "[concat(parameters('_artifactsLocation'),'/nestedtemplates/deploy-storage-replica.json',parameters('_artifactsLocationSasToken'))]",
    "deployStorageReplica": "deployStorageReplica"
  },
  "resources": [
    {
      "name": "[variables('deployStorageReplica')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployStorageReplicaTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "namePrefix": {
            "value": "[parameters('namePrefix')]"
          },
          "domainName": {
            "value": "[parameters('existingDomainName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "nicSubnetUri": {
            "value": "[variables('subnetRef')]"
          },
          "vmSize": {
            "value": "[parameters('vmSize')]"
          },
          "enableAcceleratedNetworking": {
            "value": "[parameters('enableAcceleratedNetworking')]"
          },
          "vmDiskSize": {
            "value": "[parameters('vmDiskSize')]"
          },
          "vmDiskCount": {
            "value": "[parameters('vmDiskCount')]"
          },
          "sourceComputerName": {
            "value": "[parameters('sourceComputerName')]"
          },
          "logVolumeLetter": {
            "value": "[parameters('logVolumeLetter')]"
          },
          "logVolumeSize": {
            "value": "[parameters('logVolumeSize')]"
          },
          "logVolumeAllocationUnitSize": {
            "value": "[parameters('logVolumeAllocationUnitSize')]"
          },
          "dataVolumeLetter": {
            "value": "[parameters('dataVolumeLetter')]"
          },
          "dataVolumeSize": {
            "value": "[parameters('dataVolumeSize')]"
          },
          "dataVolumeAllocationUnitSize": {
            "value": "[parameters('dataVolumeAllocationUnitSize')]"
          },
          "replicationMode": {
            "value": "[parameters('replicationMode')]"
          },
          "asyncRPO": {
            "value": "[parameters('asyncRPO')]"
          },
          "_artifactsLocation": {
            "value": "[parameters('_artifactsLocation')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          }
        }
      }
    }
  ],
  "outputs": {
  }
}